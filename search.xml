<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>利用Github搭建Hexo博客</title>
      <link href="/2022/10/11/Github-Hexo/"/>
      <url>/2022/10/11/Github-Hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="利用Github搭建Hexo博客"><a href="#利用Github搭建Hexo博客" class="headerlink" title="利用Github搭建Hexo博客"></a>利用Github搭建Hexo博客</h1><h3 id="一、配置好搭建环境"><a href="#一、配置好搭建环境" class="headerlink" title="一、配置好搭建环境"></a>一、配置好搭建环境</h3><blockquote><p>Node.js：<a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a></p><p>Git：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p></blockquote><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006132804518.png" alt="image-20221006132804518"></p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006133106214.png" alt="image-20221006133106214"></p><blockquote><p><strong>安装成功后通过cmd命令确认是否安装成功及版本号</strong><br><strong>查看Node.js版本命令：<code>node -v</code></strong><br><strong>查看Git版本命令：<code>git --version</code></strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006133432120.png" alt="image-20221006133432120"></p><h2 id="二、确保拥有Github账号"><a href="#二、确保拥有Github账号" class="headerlink" title="二、确保拥有Github账号"></a>二、确保拥有Github账号</h2><blockquote><p>Github：<a href="https://github.com/">https://github.com/</a></p></blockquote><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006133640331.png" alt="image-20221006133640331"></p><p>新建 <strong>Github个人仓库</strong>（已有仓库请直接 <strong><a href="https://github.com/new">Create a New Repository</a></strong> ）</p><p>创建仓库请注意仓库名格式：<strong>用户名.github.io</strong></p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006134214019.png" alt="image-20221006134214019"></p><h2 id="三、部署准备"><a href="#三、部署准备" class="headerlink" title="三、部署准备"></a>三、部署准备</h2><p>请选择一个文件位置放置你的hexo文件</p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006134416445.png" alt="image-20221006134416445"></p><blockquote><p>这里选择 C:\Users\[UserName]\Git\hexo</p></blockquote><p>打开之前安装的Git工具中的  <strong>GitBash</strong> ，打开默认在你的用户名目录下，利用cd命令进入新建好的文件夹</p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006134716700.png" alt="image-20221006134716700"></p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006134614915.png" alt="image-20221006134614915"></p><blockquote><p>注：git 默认是从国外服务器下载，受网络的影响比较大，有可能会出现异常，所以我们可以利用国内淘宝镜像进行安装。</p></blockquote><p>输入命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p><strong>注：之后使用的命令以 cnpm 开头,而不是默认的 npm</strong></p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006135319725.png" alt="image-20221006135319725"></p><h1 id="四、部署Hexo"><a href="#四、部署Hexo" class="headerlink" title="四、部署Hexo"></a>四、部署Hexo</h1><p><strong>(1)、 安装hexo</strong><br>输入命令进行安装：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006135718812.png" alt="image-20221006135718812"></p><p><strong>(2)、 初始化hexo</strong></p><p>请输入以下命令进行初始化：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006140953708.png" alt="image-20221006140953708"></p><blockquote><p>注：若出现无法访问Github的情况如上图请忽略</p></blockquote><p><strong>(3)、 预览hexo</strong></p><p>输入以下命令预览：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006141208055.png" alt="image-20221006141208055"></p><p>打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000/</a> </p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006141332748.png" alt="image-20221006141332748"></p><p>此时Hexo博客已经成功在本地跑起来了🎉</p><blockquote><p>停止预览请按 ctrl + c 组合键</p></blockquote><h1 id="五、Github远程配置"><a href="#五、Github远程配置" class="headerlink" title="五、Github远程配置"></a>五、Github远程配置</h1><p><strong>(1)、 生成 ssh-key</strong><br>输入命令：<code>cd ~/.ssh</code><br>输入命令：<code>ssh-keygen -t rsa -C &#39;github注册的邮箱地址&#39;</code></p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006142156769.png" alt="image-20221006142156769"></p><blockquote><p>默认回车即可</p></blockquote><p>生成的ssh密钥文件如下：</p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006142230894.png" alt="image-20221006142230894"></p><p>使用记事本打开 <code>id_rsa.pub</code> 文件并复制生成的key</p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006142448363.png" alt="image-20221006142448363"></p><p><strong>(2)、 Github配置 ssh-key</strong></p><p>点击右侧头像并进入Setting页面</p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006142520249.png" alt="image-20221006142520249"></p><p>点击左侧的 <strong>SSH and GPG keys</strong> –&gt; <strong>New SSH key</strong> ，填入前面复制下来的 ssh-key 保存即可。</p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006143117082.png" alt="image-20221006143117082"></p><p><img src="C:\Users\13189\AppData\Roaming\Typora\typora-user-images\image-20221006143301483.png" alt="image-20221006143301483"></p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006143354540.png" alt="image-20221006143354540"></p><blockquote><p>配置完成后在本地进行验证</p><p>输入**<code>ssh -T git@github.com</code>**</p><p>输入 yes 之后，将会显示你的用户名信息</p></blockquote><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006144852329.png" alt="image-20221006144852329"></p><p><strong>(3)、 GitBash 绑定 Github 信息</strong></p><p>输入命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;注册用户名&quot;</span><br></pre></td></tr></table></figure><p>输入命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.email &quot;注册邮箱&quot;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006145425422.png" alt="image-20221006145425422"></p><h1 id="六、部署至Github"><a href="#六、部署至Github" class="headerlink" title="六、部署至Github"></a>六、部署至Github</h1><p>用记事本打开并修改本地仓库目录下 <code>_config.yml</code> 文件</p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006145536018.png" alt="image-20221006145536018"></p><p><strong>在文件的末尾添加Github仓库信息</strong></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repository:</span> <span class="string">https://github.com/用户名/用户名.github.io.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006150625452.png" alt="image-20221006150625452"></p><p>安装部署工具</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-deployer-git</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006145951848.png" alt="image-20221006145951848"></p><p>此时步骤已经基本完成，接下来部署即可。</p><p>为了测试效果，先新建一篇文章：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new test</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006150312946.png" alt="image-20221006150312946"></p><p>清空缓存文件：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006151447901.png" alt="image-20221006151447901"></p><p>生成hexo静态文件：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006150411947.png" alt="image-20221006150411947"></p><p>预览效果：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221006150515821.png" alt="image-20221006150515821"></p><p>部署至Github：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221011133524017.png" alt="image-20221011133524017"></p><p>查看 GitHub 仓库是否部署成功</p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221011133554126.png" alt="image-20221011133554126"></p><h1 id="七、查看效果"><a href="#七、查看效果" class="headerlink" title="七、查看效果"></a>七、查看效果</h1><p>部署过后稍等几分钟等待GitHub刷新，打开你的博客链接就可以看到效果了✨</p><p>打开  https:&#x2F;&#x2F;【你的用户名】.github.io&#x2F;  即可查看效果</p><p><a href="https://decoow.github.io/">Hexo (decoow.github.io)</a></p><p><img src="https://raw.githubusercontent.com/Decoow/TyporaPic/master/image-20221011133755326.png" alt="image-20221011133755326"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青龙京东仓库</title>
      <link href="/2022/09/30/JD-repo/"/>
      <url>/2022/09/30/JD-repo/</url>
      
        <content type="html"><![CDATA[<h2 id="青龙京东仓库"><a href="#青龙京东仓库" class="headerlink" title="青龙京东仓库"></a>青龙京东仓库</h2><p><img src="https://raw.githubusercontent.com/Discover999/TyporaPic/master/Snipaste_2022-09-30_23-06-47.png" alt="Snipaste_2022-09-30_23-06-47"></p><h3 id="1-gys619-x2F-Absinthe（集合库）"><a href="#1-gys619-x2F-Absinthe（集合库）" class="headerlink" title="1.gys619&#x2F;Absinthe（集合库）"></a>1.gys619&#x2F;Absinthe（集合库）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://github.com/gys619/Absinthe.git <span class="string">&quot;jd_|jx_|jddj_|gua_|getJDCookie|wskey&quot;</span> <span class="string">&quot;activity|backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|utils|ZooFaker_Necklace|JDJRValidator_|sign_graphics_validate|jddj_cookie|function|ql|magic|JDJR|JD&quot;</span> <span class="string">&quot;main&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2-6dylan6-x2F-jdpro（集合库）"><a href="#2-6dylan6-x2F-jdpro（集合库）" class="headerlink" title="2.6dylan6&#x2F;jdpro（集合库）"></a>2.6dylan6&#x2F;jdpro（集合库）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://github.com/6dylan6/jdpro.git <span class="string">&quot;jd_|jx_|jddj_&quot;</span> <span class="string">&quot;backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|JD|function|sendNotify&quot;</span></span><br></pre></td></tr></table></figure><h3 id="3-Yun-City-x2F-City（集合库）"><a href="#3-Yun-City-x2F-City（集合库）" class="headerlink" title="3.Yun-City&#x2F;City（集合库）"></a>3.Yun-City&#x2F;City（集合库）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://github.com/Yun-City/City.git <span class="string">&quot;jd_|jx_|gua_|jddj_|getJDCookie&quot;</span> <span class="string">&quot;activity|backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|function|utils|sendnotify|ZooFaker_Necklace|jd_Cookie|JDJRValidator_|sign_graphics_validate|ql|magic|cleancart_activity&quot;</span></span><br></pre></td></tr></table></figure><h3 id="4-KingRan-x2F-KR（集合库）"><a href="#4-KingRan-x2F-KR（集合库）" class="headerlink" title="4.KingRan&#x2F;KR（集合库）"></a>4.KingRan&#x2F;KR（集合库）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://github.com/KingRan/KR.git <span class="string">&quot;jd_|jx_|jdCookie&quot;</span> <span class="string">&quot;activity|backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|utils|function|sign|sendNotify|ql|JDJR&quot;</span></span><br></pre></td></tr></table></figure><h3 id="5-Faker集合仓库"><a href="#5-Faker集合仓库" class="headerlink" title="5.Faker集合仓库"></a>5.Faker集合仓库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://ghproxy.com/https://github.com/shufflewzc/faker2.git <span class="string">&quot;jd_\|jx_\|getJDCookie&quot;</span> <span class="string">&quot;activity\|backUp&quot;</span> <span class="string">&quot;^jd[^_]\|USER\|ZooFaker_Necklace&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青龙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KaleidoscopeOS(万花筒) 非官方构建简单指北</title>
      <link href="/2022/09/30/KaleidoscopeOS/"/>
      <url>/2022/09/30/KaleidoscopeOS/</url>
      
        <content type="html"><![CDATA[<h1 id="KaleidoscopeOS-万花筒-非官方构建简单指北"><a href="#KaleidoscopeOS-万花筒-非官方构建简单指北" class="headerlink" title="KaleidoscopeOS(万花筒) 非官方构建简单指北"></a>KaleidoscopeOS(万花筒) 非官方构建简单指北</h1><p><img src="https://raw.githubusercontent.com/Discover999/TyporaPic/master/%E4%B8%87%E8%8A%B1%E7%AD%92.png"></p><blockquote><p>本文转载自：<a href="https://www.akr-developers.com/d/609-kaleidoscopeos">https://www.akr-developers.com/d/609-kaleidoscopeos</a></p></blockquote><blockquote><p>官方下载站：<a href="https://kaleidoscope.ink/download.html">https://kaleidoscope.ink/download.html</a></p><p>Github：<a href="https://github.com/Project-Kaleidoscope">https://github.com/Project-Kaleidoscope</a></p></blockquote><p>本文以构建OnePlus8T (Kebab) 非官方 KaleidoscopeOS 为基础展开。<br>构建环境: <code>Ubuntu Server 20.04 LTS</code></p><h2 id="1-您需要准备的"><a href="#1-您需要准备的" class="headerlink" title="1. 您需要准备的"></a>1. 您需要准备的</h2><h3 id="1-1-设备要求："><a href="#1-1-设备要求：" class="headerlink" title="1-1 设备要求："></a>1-1 设备要求：</h3><p>a. 至少 16GB 的运行内存，并设置至少 8GB 的 swap 交换分区。<br>b. 系统为 Linux ，当然也可以是 WSL ，可以是物理机，虚拟机，服务器，本文使用服务器 Ubuntu20.04 作为示范。<br>c. 至少 300GB 的硬盘存储空间，源码完全同步需约 120GB 硬盘空间，在编译过程中释放的文件可能回使硬盘占用达到 270GB 左右，所以 300GB 的硬盘大小是必须的<br>d. 稳定的网络环境（懂的都懂）<br>e. 一颗强劲的 CPU （当然不强也行，就是时间久一点）。<br>f. 一双灵巧的双手，聪慧的大脑和谷歌使用技巧。</p><h3 id="1-2-准备Tree"><a href="#1-2-准备Tree" class="headerlink" title="1-2 准备Tree"></a>1-2 准备Tree</h3><p>OnePlus 8T 由于有官方维护者提供 DeviceTree ,故无需重新制作，这里只提供大概思路。  </p><p>如果你的机型恰好有 LineageOS 的官方支持，那么你可以根据 LineageOS 和 KaleidoscopeOS 两个项目共有的官方维护设备的 tree 的区别进行修改。  </p><p>如果你的设备很不幸没有没有被 LineageOS 官方支持，也不必灰心，您也可以看看有没有其他 ROM 的支持，同样的，您可以让该 ROM 和 KaleidoscopeOS 两个项目共有的官方维护设备的tree的区别进行修改。  </p><p>如果您非常不幸，没有任何第三方 ROM 支持，您可以自己尝试编写 tree ，当然如果您没有能力编写，也可以请教各位 dalao 帮忙，具体参见本文最后一部分。  </p><ul><li><p>以 OnePlus8T 为例，需要准备的有：<code>/device/oneplus/kebab</code> , <code>/device/oneplus/sm8250-common</code> , <code>/kernel/oneplus/kebab</code> , <code>/vendor/oneplus/kebab</code> , <code>/vendor/oneplus/sm8250-common</code>  </p><p>请注意，以上各 tree 可以在 <a href="https://github.com/Kscope-Devices">https://github.com/Kscope-Devices</a> 获取，请注意，最新版本源码需拉取 Sunflowerleaf 分支  </p><p><code>git clone -b sunflowerleaf &lt;link.git&gt;</code></p></li></ul><h2 id="2-准备构建"><a href="#2-准备构建" class="headerlink" title="2. 准备构建"></a>2. 准备构建</h2><h3 id="2-1-配置环境"><a href="#2-1-配置环境" class="headerlink" title="2-1 配置环境"></a>2-1 配置环境</h3><p>a. 安装所需软件包</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get upgrade -y </span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get install -y openjdk-8-jdk git gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses-dev libncurses5 ×11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip bc imagemagick ccache schedtool libssl-dev jq patchelf</span><br></pre></td></tr></table></figure><p>b. 配置git信息</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">git config –<span class="keyword">global</span> <span class="keyword">user</span>.name “在此处替换成你的名字”  </span><br><span class="line">git config –<span class="keyword">global</span> <span class="keyword">user</span>.email “在此处替换成你的邮箱”</span><br></pre></td></tr></table></figure><p>c. 下载repo（二选一）<br>i. 官方源</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir ~/.bin  </span><br><span class="line">PATH=~/.bin:$PATH  </span><br><span class="line">curl [https://storage.googleapis.com/git-repo-downloads/repo](https://storage.googleapis.com/git-repo-downloads/repo) &gt; ~/.bin/repo  </span><br><span class="line">chmod +x ~/.bin/repo</span><br></pre></td></tr></table></figure><p>ii. 清华源</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir ~/.bin  </span><br><span class="line">PATH=~/.bin:$PATH  </span><br><span class="line">curl [https://mirrors.tuna.tsinghua.edu.cn/git/git-repo](https://mirrors.tuna.tsinghua.edu.cn/git/git-repo) -o repo  </span><br><span class="line">chmod +x repo</span><br></pre></td></tr></table></figure><p>d. 建立项目文件夹并进入。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir KaleidoscopeOS &amp;&amp; cd KaleidoscopeOS</span><br></pre></td></tr></table></figure><h3 id="2-2-使用KaleidoscopeOS初始化本地仓库。"><a href="#2-2-使用KaleidoscopeOS初始化本地仓库。" class="headerlink" title="2-2 使用KaleidoscopeOS初始化本地仓库。"></a>2-2 使用KaleidoscopeOS初始化本地仓库。</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">repo init -u [https://github.com/Project-Kaleidoscope/android\_manifest.git](https://github.com/Project-Kaleidoscope/android_manifest.git) -b sunflowerleaf  </span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">repo sync</span><br></pre></td></tr></table></figure><h3 id="2-3-坐和放宽。"><a href="#2-3-坐和放宽。" class="headerlink" title="2-3. 坐和放宽。"></a>2-3. 坐和放宽。</h3><blockquote><p>​    此过程速度取决于您的网络，可能会会非常漫长，请耐心等待。</p></blockquote><h2 id="3-开始构建"><a href="#3-开始构建" class="headerlink" title="3. 开始构建"></a>3. 开始构建</h2><h3 id="3-1-您需要将在1-2部分中获得的tree放入对应目录，然后执行"><a href="#3-1-您需要将在1-2部分中获得的tree放入对应目录，然后执行" class="headerlink" title="3-1 您需要将在1-2部分中获得的tree放入对应目录，然后执行"></a>3-1 您需要将在1-2部分中获得的tree放入对应目录，然后执行</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">. build/envsetup.sh</span><br></pre></td></tr></table></figure><h3 id="3-2-选择构建版本。"><a href="#3-2-选择构建版本。" class="headerlink" title="3-2 选择构建版本。"></a>3-2 选择构建版本。</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lunch  </span><br><span class="line">//输入要构建的版本，如28  </span><br><span class="line">//熟练之后您可以使用lunch kscope\_&lt;codename&gt;-&lt;buildtype&gt; 格式命令直接构建，如 lunch kscpoe\_kebab-user</span><br></pre></td></tr></table></figure><h3 id="3-3-开始构建。"><a href="#3-3-开始构建。" class="headerlink" title="3-3 开始构建。"></a>3-3 开始构建。</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mka bacon</span><br></pre></td></tr></table></figure><h2 id="4-常见问题"><a href="#4-常见问题" class="headerlink" title="4. 常见问题"></a>4. 常见问题</h2><p>Q1: 网络连接良好但下载失败&#x2F;拉取代码失败&#x2F;同步失败…</p><blockquote><p>A1: 请检查是否连接到国际互联网。</p></blockquote><p>Q2: 选择构建版本时报错 <code>frameworks/native/build/phone-xhdpi-6144-dalvik-heap.mk:19: error: \_nic.PRODUCTS.\[\[device/oneplus/kebab/kscope\_kebab.mk\]\]: “vendor/oneplus/addons/camera/camera-vendor.mk” does not exist.   18:03:02 dumpvars failed with: exit status 1 , 找不到对应文件</code></p><blockquote><p>A2: 该部分在gitlab开源 <a href="https://gitlab.com/libxzr/vendor_oneplus_addons_camera">https://gitlab.com/libxzr/vendor_oneplus_addons_camera</a></p></blockquote><p>Q3: 构建时其他报错 <code>vendor(device)/xxx/xxx/xxx/xxx.mk” does not exist.18:03:02 dumpvars failed with: exit status 1</code></p><blockquote><p>A3: 请自行搜索相关库进行补充，比如”<code>vendor/oneplus/addons/camera/camera-vendor.mk</code>“ 需要寻找  <code>vendor\_oneplus\_addons\_camera</code> 库。</p></blockquote><p>Q4: 做好的包到哪里找？</p><blockquote><p>A4: 请到项目文件夹中<code>out/target/product/&lt;device\_name&gt;</code>下寻找。</p></blockquote><p>Q5: 做好的包带root吗？</p><blockquote><p>A5: 不带。</p></blockquote><p>Q6: 一共生成两个zip(一个ota_**_.zip，一个unofficial_**_.zip)，有什么区别？</p><blockquote><p>A6: 没有区别，md5都一样，两个都能用。</p></blockquote><p>Q7: 怎么刷进去?</p><blockquote><p>A7: 建议使用<code>adb sideload</code>刷入，刷前记得双清。</p></blockquote><p>Q8: 其他问题</p><blockquote><p>提问好去处:<br>xda: <a href="https://www.xda-developers.com/">https://www.xda-developers.com/</a><br>akr社区: <a href="https://www.akr-developers.com/">https://www.akr-developers.com/</a><br>github: <a href="https://github.com/">https://github.com/</a><br>当然你也可以到Chatroom和Channel中向大佬提问，提问前请阅读《提问的艺术》<a href="https://github.com/betaseeker/How-To-Ask-Questions">https://github.com/betaseeker/How-To-Ask-Questions</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> ROM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10 查看占用端口</title>
      <link href="/2022/09/20/Win10-catport/"/>
      <url>/2022/09/20/Win10-catport/</url>
      
        <content type="html"><![CDATA[<ol><li><h3 id="打开-CMD-命令行"><a href="#打开-CMD-命令行" class="headerlink" title="打开 CMD 命令行"></a>打开 CMD 命令行</h3></li><li><h3 id="查看所有端口占用"><a href="#查看所有端口占用" class="headerlink" title="查看所有端口占用"></a>查看所有端口占用</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://raw.githubusercontent.com/Discover999/TyporaPic/master/1.png" alt="1"></p><ol start="3"><li><h3 id="查找特定端口号占用"><a href="#查找特定端口号占用" class="headerlink" title="查找特定端口号占用"></a>查找特定端口号占用</h3><p>找到占用8080端口的程序PID.</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -aon|findstr <span class="string">&quot;8080&quot;</span></span><br></pre></td></tr></table></figure></li></ol><p><img src="https://raw.githubusercontent.com/Discover999/TyporaPic/master/2.png" alt="2"></p><ol start="4"><li><h3 id="寻找进程"><a href="#寻找进程" class="headerlink" title="寻找进程"></a>寻找进程</h3><p> 找到PID为10108的进程</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tasklist|findstr <span class="string">&quot;10108&quot;</span></span><br></pre></td></tr></table></figure></li></ol><p><img src="https://raw.githubusercontent.com/Discover999/TyporaPic/master/3.png" alt="3"></p><ol start="5"><li><h3 id="释放端口"><a href="#释放端口" class="headerlink" title="释放端口"></a>释放端口</h3> 打开任务管理器，点击详细信息，找到对应的进程并确认PID为10108，结束进程，端口就被释放了</li></ol><p><img src="https://raw.githubusercontent.com/Discover999/TyporaPic/master/4.png" alt="4"></p>]]></content>
      
      
      <categories>
          
          <category> Win10 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/09/09/hello-world/"/>
      <url>/2020/09/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><p>欢迎光临 <a href="https://hexo.io/">Hexo</a>! 这是你的第一篇文章。查看 <a href="https://hexo.io/docs/">文档 </a>了解更多信息。如果您在使用 Hexo 时遇到任何问题，您可以在 <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> 中找到答案，也可以在 <a href="https://github.com/hexojs/hexo/issues">GitHub</a> 上咨询。</p><h2 id="Quick-Start快速开始"><a href="#Quick-Start快速开始" class="headerlink" title="Quick Start快速开始"></a>Quick Start快速开始</h2><h3 id="Create-a-new-post创建新文章"><a href="#Create-a-new-post创建新文章" class="headerlink" title="Create a new post创建新文章"></a>Create a new post创建新文章</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server启动服务"><a href="#Run-server启动服务" class="headerlink" title="Run server启动服务"></a>Run server启动服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files生成静态文件"><a href="#Generate-static-files生成静态文件" class="headerlink" title="Generate static files生成静态文件"></a>Generate static files生成静态文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites部署至远程站点"><a href="#Deploy-to-remote-sites部署至远程站点" class="headerlink" title="Deploy to remote sites部署至远程站点"></a>Deploy to remote sites部署至远程站点</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hello World </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
